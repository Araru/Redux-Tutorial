{"ast":null,"code":"import { FETCH_POSTS, NEW_POSTS } from \"./types\";\nexport function fetchPosts() {\n  return function (dispatch) {\n    fetch('https://jsonplaceholder.typicode.com/posts').then(res => res.json()).then(posts => dispatch({\n      type: FETCH_POSTS,\n      payload: posts\n    }));\n  };\n}\nexport function createPosts(postData) {\n  fetch(\"https://jsonplaceholder.typicode.com/posts\", {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify(post)\n  }).then(res => res.json()).then(data => dispatch({\n    type: NEW_POSTS,\n    payload: posts\n  }));\n}","map":{"version":3,"sources":["/Users/adamararu/Desktop/reduxexample/src/actions/postActions.js"],"names":["FETCH_POSTS","NEW_POSTS","fetchPosts","dispatch","fetch","then","res","json","posts","type","payload","createPosts","postData","method","headers","body","JSON","stringify","post","data"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,QAAuC,SAAvC;AAEA,OAAO,SAASC,UAAT,GAAsB;AACzB,SAAO,UAAUC,QAAV,EAAoB;AACvBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,KAAK,IAAIL,QAAQ,CAAC;AACpBM,MAAAA,IAAI,EAAET,WADc;AAEpBU,MAAAA,OAAO,EAAEF;AAFW,KAAD,CAFvB;AAMH,GAPD;AAQH;AAED,OAAO,SAASG,WAAT,CAAqBC,QAArB,EAA+B;AAClCR,EAAAA,KAAK,CAAC,4CAAD,EAA+C;AAClDS,IAAAA,MAAM,EAAE,MAD0C;AAElDC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFyC;AAKlDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeC,IAAf;AAL4C,GAA/C,CAAL,CAOGb,IAPH,CAOQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPf,EAQGF,IARH,CAQQc,IAAI,IAAKhB,QAAQ,CAAC;AAACM,IAAAA,IAAI,EAAER,SAAP;AAC1BS,IAAAA,OAAO,EAAEF;AADiB,GAAD,CARzB;AAUD","sourcesContent":["import { FETCH_POSTS, NEW_POSTS } from \"./types\";\n\nexport function fetchPosts() {\n    return function (dispatch) {\n        fetch('https://jsonplaceholder.typicode.com/posts')\n        .then(res => res.json())\n        .then(posts => dispatch({\n            type: FETCH_POSTS,\n            payload: posts\n        }));\n    }\n}\n\nexport function createPosts(postData) {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(post)\n    })\n      .then(res => res.json())\n      .then(data =>  dispatch({type: NEW_POSTS,\n    payload: posts}));\n  }\n"]},"metadata":{},"sourceType":"module"}